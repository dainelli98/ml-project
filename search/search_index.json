{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ml-project","text":""},{"location":"#overview","title":"Overview","text":"<p>This project includes MLFlow integration for experiment tracking, model registry, feature store, and data drift detection. For detailed usage instructions, see MLFlow Integration Guide.</p>"},{"location":"#important","title":"Important","text":"<p>Please always create a separate environment for your project. There is a handy utility provided that could do this for you, read below.</p> <p>Please keep your pyproject.toml and uv.lock up to date with environments dependencies. You can find more information about the documentation and set up here.</p> <p>If your project version supports a different python version, please change in the above badges along with the pyproject.toml and Dockerfile.</p> <p>Please remember to edit the pyproject.toml to suit your project. We are hoping to automate it as GitHub templates allow for it in the future.</p> <p>Please do not put confidential data useful for this project anywhere other than data folder. The .gitignore is designed to ignore the folder contents making the project git safe.</p>"},{"location":"#passwords","title":"Passwords","text":"<p>Some applications connect to any third-party service (for example a SQL server) requiring a user name and a password.</p> <p>This kind of information shall be never be hardcoded in the code or saved in any configuration file that may be uploaded to the repository.</p> <p>A simple way to handle critical data is saving them as environment variables.</p> <p>Simply create a <code>.env</code> file at the root of the repository. Then and save user names and passwords like:</p> <pre><code>YOUR_USERNAME=your_username\nYOUR_PASSWORD=your_password\n</code></pre> <p>You can then read <code>.env</code> files for Python code with the <code>dotenv</code> package.</p> <p><code>.env</code> files are excluded from the Git repository in the <code>.gitignore</code> file.</p>"},{"location":"#testing","title":"Testing","text":"<p>You can run the tests for this project by running the following command in your Python environment:</p> <pre><code>pytest tests\n</code></pre> <p>To verify correct setup for your environment you can run the tests.</p>"},{"location":"#actions","title":"Actions","text":"<p>There are some actions that run on this project by default:</p> <ol> <li>Build Documentation<ul> <li>Build documentation for the project, ready for use with github pages</li> </ul> </li> <li>Version &amp; Release<ul> <li>Use Semantic Versioning for your project. This relies on conventional commits, there is a check for this in the pre-commit hooks.</li> </ul> </li> <li>Pull Request QA Checks<ul> <li>Run a series of checks on the pull request to ensure the code is up to standard.</li> </ul> </li> </ol>"},{"location":"#project-organization","title":"Project Organization","text":"<pre><code>    \u251c\u2500\u2500 .github/workflows  &lt;- Github actions.\n    \u251c\u2500\u2500 Makefile           &lt;- Makefile with utility commands.\n    \u251c\u2500\u2500 Dockerfile         &lt;- Create a Docker image for this project.\n    \u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n    \u251c\u2500\u2500 data               &lt;- The data folder for this project. This is always ignored by git by design.\n    \u2502\n    \u251c\u2500\u2500 docs               &lt;- A default mkdocs project.\n    \u2502\n    \u251c\u2500\u2500 models             &lt;- Trained and serialized models, model predictions, or model summaries.\n    \u2502\n    \u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Please ensure the output is stripped out of any\n    confidential information.\n    \u2502\n    \u251c\u2500\u2500 scripts            &lt;- Helper scripts for running the project.\n    \u2502\n    \u251c\u2500\u2500 ml_project         &lt;- Source code for use in this project.\n    \u2502\n</code></pre>"},{"location":"#docker-usage","title":"Docker Usage","text":"<p>This project can be run in a Docker container for reproducibility and ease of use. The Docker setup includes mounting of data and model directories to ensure persistence of data and trained models.</p>"},{"location":"#building-the-docker-image","title":"Building the Docker Image","text":"<pre><code>make docker-build\n</code></pre>"},{"location":"#running-the-full-training-pipeline","title":"Running the Full Training Pipeline","text":"<pre><code>make docker-pipeline\n</code></pre>"},{"location":"#running-individual-steps","title":"Running Individual Steps","text":"<p>You can run each step of the pipeline individually:</p> <pre><code># Extract data\nmake docker-extract\n\n# Prepare data\nmake docker-prepare\n\n# Preprocess data\nmake docker-preprocess\n\n# Train models\nmake docker-train\n\n# Run inference\nmake docker-inference args=\"--model-file models/GradientBoostingRegressor_best_model.pkl --input-file data/x_test.csv\"\n</code></pre>"},{"location":"#custom-commands","title":"Custom Commands","text":"<p>For running custom commands:</p> <pre><code>make docker-run cmd=\"extract -- --output data/custom_raw_data.csv\"\n</code></pre>"},{"location":"#interactive-shell","title":"Interactive Shell","text":"<p>To get an interactive shell inside the container:</p> <pre><code>make docker-shell\n</code></pre>"},{"location":"#set-up-documentation-web-page","title":"Set up Documentation Web Page","text":"<p>You can get your project documentation as a github website out of the box using this template. To enable it you must:</p> <ol> <li>Go to Settings.</li> <li>Under the Code and automation header in the sidebar click Pages.</li> <li>Under Build and deployment select Deploy from a branch</li> <li>Choose Branch select gh-pages</li> <li>Scroll to the bottom of the page and go to the url in the Enforce HTTPS section.</li> </ol> <p>You should be able to view your documentation site! You can change the colours and some of the formatting in the <code>mkdocs.yaml</code> file.</p>"},{"location":"#utilities-available","title":"Utilities Available","text":""},{"location":"#make-init","title":"make init","text":"<p>Would create a uv environment for you along with pre-commit</p>"},{"location":"#make-clean","title":"make clean","text":"<p>A utility tool to clear pycache and pyc or pyo files</p>"}]}